<?php
/*
 * @package jmws_idMyGadget_for_drupal
 *
 * Plugin Name: jmws_idMyGadget_for_drupal
 * Plugin URI: 
 * Description: Integrate idMyGadget with a couple of drupal themes (to start).
 * Author: Tom Hartung
 * Version: 1.0
 * Author URI: http://tomwhartung.com/
 */
// define( 'IDMYGADGET__PLUGIN_DIR', plugin_dir_path( __FILE__ ) );
// require_once( IDMYGADGET__PLUGIN_DIR . '/JmwsIdMyGadgetDrupal.php' );
// require_once 'jmws_idMyGadget_for_joomla/PhoneBurgerMenuIcon.php';
require_once( 'idMyGadget/JmwsIdMyGadgetDrupal.php' );

$jmwsIdMyGadget = null;

error_log( 'Hi there cutie.' );

/**
 * Implements hook_help().
 */
function jmws_idMyGadget_for_drupal_help($path, $arg) {
  switch ($path) {
    case 'admin/help#jmws_idMyGadget_for_drupal':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("The jmws_idMyGadget_for_drupal module provides device detection so we can control what content etc. is sent ot different device types.") . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('detect_mobile_browsers') . '</dt>';
      $output .= '<dd>' . t('yadda yadda yadda.') . '</dd>';
      $output .= '</dl>';
      return $output;
    case 'admin/config/development/idmygadget/%':
      // if (user_access('switch shortcut sets')) {
      //   $output = '<p>' . t('Define which shortcut set you are using on the <a href="@shortcut-link">Shortcuts tab</a> of your account page.', array('@shortcut-link' => url("user/{$user->uid}/shortcut    s"))) . '</p>';
      //   return $output;
      // }
      $output = '<p>' . t('Define which gadget detector you are using here.' ) . '</p>';
      return $output;

  }
}

/**
 * Create admin config form to allow selection of which gadget detector to use
 *
 */
function jmws_idMyGadget_for_drupal_admin()
{
	$form = array();
	$form['idMyGadget_gadget_detector'] = array(
		'#type' => 'radios',
		'#title' => t('Gadget Detector'),
		'#default_value' => variable_get('idMyGadget_gadget_detector', 'detect_mobile_browsers'),
		'#options' => $module_options,
		'#description' => t('Select the 3rd party device detector to use for this site.'),
		'#required' => TRUE,
	);

	return system_settings_form( $form );
}

/**
 * Implements hook_menu().
 */
function jmws_idMyGadget_menu()
{
	//
	// Add a section to the module's Settings screen that contains
	// radio buttons allowing the admin to set the device detector.
	//
	$items = array();

//	$wp_customize->add_section( 'gadget_detector' , array(
//		'title'      => __( 'IdMyGadget', $theme_object_stylesheet ),
//		'description' => __( 'Select the 3rd party device detector to use for this theme.' ),
//		'priority'   => 9999,
//	) );
//
//	$wp_customize->add_setting( 'gadget_detector' , array(
//		'default'     => JmwsIdMyGadgetDrupal::$supportedGadgetDetectors[0],
//		'transport'   => 'refresh',
//	) );
//
//	$wp_customize->add_control( 'gadget_detector', array(
//		'label'    => __( 'Gadget Detector', $theme_object_stylesheet ),
//		'section'  => 'gadget_detector',
//		'type'     => 'radio',
//		'choices'  => JmwsIdMyGadgetDrupal::$supportedGadgetDetectors,
//		'priority' => 100,
//	) );

	$items['admin/config/development/idmygadget'] = array(
		'title' => 'IdMyGadget module settings',
		'description' => 'Use this IdMyGadget settings page to change the device detector etc (tbd).',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('jmws_idMyGadget_for_drupal_admin'),
		'access arguments' => array('administer jmws_idMyGadget_for_drupal settings'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 *
 * @global object $jmwsIdMyGadget
 */
function jmws_idMyGadget_for_drupal_instantiate()
{
	global $gadgetDetectorIndex;    // global for debugging purposes, consider "locking it down?"
	global $gadgetDetectorString;   // global for debugging purposes, consider "locking it down?"
	global $idMyGadgetClass;        // global for debugging purposes, consider "locking it down?"

	$gadgetDetectorIndex = get_theme_mod('gadget_detector');
	$supportedGadgetDetectors = JmwsIdMyGadgetDrupal::$supportedGadgetDetectors;
	$gadgetDetectorString = $supportedGadgetDetectors[$gadgetDetectorIndex];

	global $jmwsIdMyGadget;
	$jmwsIdMyGadget = new JmwsIdMyGadgetDrupal($gadgetDetectorString);

	$jmwsIdMyGadget->usingJQueryMobile = FALSE;

	$idMyGadgetClass = get_class( $jmwsIdMyGadget->getIdMyGadget() );
}

