<?php
/*
 * @package jmws_idMyGadget_for_drupal
 *
 * Plugin Name: idMyGadget
 * Plugin URI: 
 * Description: Integrate idMyGadget with a couple of drupal themes (to start).
 * Author: Tom Hartung
 * Version: 1.0
 * Author URI: http://tomwhartung.com/
 */
define( 'IDMYGADGET_MODULE_DIR', __DIR__ . DIRECTORY_SEPARATOR . 'idMyGadget' );
require_once( 'idMyGadget/JmwsIdMyGadgetDrupal.php' );
// require_once 'jmws_idMyGadget_for_joomla/PhoneBurgerMenuIcon.php';

/**
 * Instantiate the idmygadget object and check the installation
 */
$jmwsIdMyGadget = null;
function idMyGadget_page_alter( &$page ) {
  global $jmwsIdMyGadget;
  instantiateJmwsIdMyGadget();
  checkJmwsIdMyGadgetInstallation();

  print '<p>' . $jmwsIdMyGadget->getGadgetDetectorStringChar() . '/' . $jmwsIdMyGadget->getGadgetStringChar() . '</p>';
  // print '<p>__DIR__: ' . __DIR__ . '</p>';
}

/**
 * Instantiate the idMyGadget object, telling it which underlying 3rd-party device detector to use
 * @global object $jmwsIdMyGadget
 */
function instantiateJmwsIdMyGadget() {
  global $jmwsIdMyGadget;         // needs to be global for realsies

  $gadgetDetectorIndex = variable_get( 'idMyGadget_gadget_detector', 0 );
  $supportedGadgetDetectors = JmwsIdMyGadgetDrupal::$supportedGadgetDetectors;
  $gadgetDetectorString = $supportedGadgetDetectors[$gadgetDetectorIndex];
  $jmwsIdMyGadget = new JmwsIdMyGadgetDrupal( $gadgetDetectorString );
  $jmwsIdMyGadget->usingJQueryMobile = FALSE;
}

/**
 * Calls jmwsIdMyGadget method to check installation of the selected underlying 3rd party
 * device detection software, and if it is missing, displays appropriate message.
 * Note that we can serve the page and all, it will just be the same for all device types.
 */
function checkJmwsIdMyGadgetInstallation() {
  global $jmwsIdMyGadget;

  if ( $jmwsIdMyGadget->isInstalled() ) {
    unset( $jmwsIdMyGadget->errorMessage );
  }
  else {
    $linkToReadmeOnGithub =
      '<a href="' . $jmwsIdMyGadget->getLinkToReadme() . '" class="idmygadget-error" target="_blank">' .
        'the appropriate README.md file on github.</a>';
    $jmwsIdMyGadget->errorMessage = IDMYGADGET_DETECTOR_NOT_INSTALLED_OPENING .
      $linkToReadmeOnGithub . IDMYGADGET_DETECTOR_NOT_INSTALLED_CLOSING;
    drupal_set_message( t($jmwsIdMyGadget->errorMessage), 'error' );
  }
}

/**
 * Implements hook_help().
 */
function idMyGadget_help($path, $arg) {
  switch ($path) {
    case 'admin/help#idMyGadget':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("The idMyGadget module provides device detection so we can control what content etc. is sent ot different device types.") . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('detect_mobile_browsers') . '</dt>';
      $output .= '<dd>' . t('yadda yadda yadda.') . '</dd>';
      $output .= '</dl>';
      return $output;
    case 'admin/config/idmygadget%':
      // if (user_access('switch shortcut sets')) {
      //   $output = '<p>' . t('Define which shortcut set you are using on the <a href="@shortcut-link">Shortcuts tab</a> of your account page.', array('@shortcut-link' => url("user/{$user->uid}/shortcut    s"))) . '</p>';
      //   return $output;
      // }
      $output = '<p>' . t('Define which gadget detector you are using here.' ) . '</p>';
      return $output;

  }
}

/**
 * Create admin config function to allow selection of which gadget detector to use
 * Reference: https://www.drupal.org/node/206761
 * Example: function system_logging_settings in system/system.admin.inc
 */
function idMyGadget_admin()
{
	$supported_gadget_detectors = JmwsIdMyGadgetDrupal::$supportedGadgetDetectors;
	$default_gadget_detector = JmwsIdMyGadgetDrupal::$supportedGadgetDetectors[0];
	$form = array();
	//
	// Add a section to the module's Settings screen that contains
	// radio buttons allowing the admin to set the device detector.
	// This shows up under Configuration -> IdMyGadget -> Gadget Detector
	//
	$form['idMyGadget_gadget_detector'] = array(
		'#type' => 'radios',
		'#title' => t('Gadget Detector'),
		'#default_value' => variable_get( 'idMyGadget_gadget_detector', JmwsIdMyGadgetDrupal::$supportedGadgetDetectors[0] ),
		'#options' => $supported_gadget_detectors,
		'#description' => t('Select the 3rd party device detector to use for this site.'),
		'#required' => TRUE,
	);

//	variable_del( 'test_variable', 'value_of_test_variable' );

	return system_settings_form( $form );
}

/**
 * Implements hook_menu().
 */
function idMyGadget_menu()
{
	$items = array();

	//
	// First add a new section to the Configuration admin option screen
	// Reference: https://www.drupal.org/node/1251942 (bottom of page)
	//
	$items['admin/config/idmygadget'] = array(
		'title' => 'IdMyGadget Header Settings',
		'description' => 'Settings for device-dependent headings.',
		'position' => 'right',
	//	'weight' => 0,      // where we probably want it (between development and web services)
		'weight' => -17,    // ok for now (nearer top)
		'page callback' => 'system_admin_menu_block_page', //DONT CHANGE THIS!
		'access arguments' => array('administer site configuration'), // Permission needed to view this area
		'file' => 'system.admin.inc', //DONT CHANGE THIS!
		'file path' => drupal_get_path('module', 'system'), //DONT CHANGE THIS!
	);
	//
	// Add a section to the module's Settings screen that contains
	// radio buttons allowing the admin to set the device detector.
	// This shows up under Configuration -> IdMyGadget -> Gadget Detector
	//
	$items['admin/config/idmygadget/settings'] = array(
		'title' => 'Idmygadget module settings',
		'description' => 'Use this IdMyGadget settings page to change the device detector etc (tbd).',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('idMyGadget_admin'),
		'access arguments' => array('administer idMyGadget settings'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 * Allows us to see what is in $page
 * Reference: https://api.drupal.org/api/drupal/modules%21system%21system.api.php/function/hook_page_alter/7
 * NOTES:
 *   This does NOTHING when we have "_NOT" appended to the name!!
 *   This same function is in stark_idMyGadget/template.php
 */
function idMyGadget_page_alter_NOT( &$page ) {
  print '<p>Entering idMyGadget_page_alter_NOT (in the module)</p>';

  print '<p>';
  if ( isset($page['page_top']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[page_top]</p>';
    print '<p>';
    var_dump( $page['page_top'] ); 
    print '</p><p style="color:red;">************************************** end of page[page_top]</p>';
  } else {
    print 'page[page_top] is not set.';
  }
  print '</p>';

  print '<p>';
  if ( isset($page['header']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[header]</p>';
    print '<p>';
    var_dump( $page['header'] ); 
    print '</p><p style="color:red;">************************************** end of page[header]</p>';
  } else {
    print 'page[header] is not set.';
  }
  print '</p>';

  print '<p>';
  if ( isset($page['sidebar_first']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[sidebar_first]</p>';
    print '<p>';
    var_dump( $page['sidebar_first'] ); 
    print '</p><p style="color:red;">************************************** end of page[sidebar_first]</p>';
  } else {
    print 'page[sidebar_first] is not set.';
  }
  print '</p>';

  print '<p>';
  if ( isset($page['content']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[content]</p>';
    print '<p>';
    var_dump( $page['content'] ); 
    print '</p><p style="color:red;">************************************** end of page[content]</p>';
  } else {
    print 'page[content] is not set.';
  }
  print '</p>';

  print '<p>';
  if ( isset($page['sidebar_second']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[sidebar_second]</p>';
    print '<p>';
    var_dump( $page['sidebar_second'] ); 
    print '</p><p style="color:red;">************************************** end of page[sidebar_second]</p>';
  } else {
    print 'page[sidebar_second] is not set.';
  }
  print '</p>';

  print '<p>';
  if ( isset($page['page_bottom']) ) {
    print '<span style="color:red;">************************************** var_dump-ing page[page_bottom]</span></p>';
    print '<p>';
    var_dump( $page['page_bottom'] );
    print '</p><p style="color:red;">************************************** end of page[page_bottom]</p>';
  } else {
    print 'page[page_bottom] is not set.';
  }
  print '</p>';

  print '<p>Leaving idMyGadget_page_alter_NOT (in the module)</p>';
}
